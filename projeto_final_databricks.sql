-- Databricks notebook source
-- MAGIC %python
-- MAGIC import os
-- MAGIC import pandas as pd

-- COMMAND ----------

drop database if exists projeto_layer1;


-- COMMAND ----------

create database projeto_layer1

-- COMMAND ----------

use  projeto_layer1;

-- COMMAND ----------

-- MAGIC %python
-- MAGIC source = "/FileStore/tables/projeto_final3"
-- MAGIC 
-- MAGIC dir_list = dbutils.fs.ls(source)
-- MAGIC arquivos = {}
-- MAGIC 
-- MAGIC for j in dir_list:
-- MAGIC     #print(j[0], j[1])
-- MAGIC     if str(j[1]).endswith('.csv'):
-- MAGIC         arquivos[str(j[1])[:-4]] = j[0]
-- MAGIC 
-- MAGIC print('\n\n')
-- MAGIC         
-- MAGIC for filename in arquivos:    
-- MAGIC     
-- MAGIC     #print(filename, arquivos[filename])
-- MAGIC         
-- MAGIC     # File location and type
-- MAGIC     file_location = arquivos[filename]
-- MAGIC     file_type = "csv"
-- MAGIC 
-- MAGIC     # CSV options
-- MAGIC     infer_schema = "false"
-- MAGIC     first_row_is_header = "true"
-- MAGIC     delimiter = ","
-- MAGIC 
-- MAGIC     # The applied options are for CSV files. For other file types, these will be ignored.
-- MAGIC     df = spark.read.format(file_type) \
-- MAGIC       .option("inferSchema", infer_schema) \
-- MAGIC       .option("header", first_row_is_header) \
-- MAGIC       .option("sep", delimiter) \
-- MAGIC       .load(arquivos[filename])
-- MAGIC     
-- MAGIC #     colunas = df.columns
-- MAGIC #     nomes = list(map(lambda x : 'pre_'+x ,colunas))
-- MAGIC #     df2 = df.toDF(*nomes)
-- MAGIC 
-- MAGIC     #display(df)
-- MAGIC     
-- MAGIC 
-- MAGIC     df.write.format("parquet").mode("overwrite").saveAsTable(filename)
-- MAGIC     
-- MAGIC     print(filename + ' carregado')
-- MAGIC     

-- COMMAND ----------

drop database if exists projeto_layer2;

-- COMMAND ----------

create database projeto_layer2

-- COMMAND ----------

use  projeto_layer2;

-- COMMAND ----------

drop table if exists application_train 

-- COMMAND ----------

drop table if exists application_test_student

-- COMMAND ----------

-- MAGIC %md
-- MAGIC **Transformações / limpezas**
-- MAGIC * Tipagem correta de colunas
-- MAGIC * Colunas com formatação de float mas que eram inteiros
-- MAGIC * Mudança de sinal negativo de alguns campos
-- MAGIC  

-- COMMAND ----------

create table application_train (
SK_ID_CURR	 INT,
TARGET    INT,
CNT_CHILDREN	 INT,
DAYS_BIRTH	 INT,
DAYS_EMPLOYED	 INT,
DAYS_REGISTRATION	 INT,
DAYS_ID_PUBLISH	 INT,
OWN_CAR_AGE	 INT,
FLAG_MOBIL	 INT,
FLAG_EMP_PHONE	 INT,
FLAG_WORK_PHONE	 INT,
FLAG_CONT_MOBILE	 INT,
FLAG_PHONE	 INT,
FLAG_EMAIL	 INT,
CNT_FAM_MEMBERS	 INT,
REGION_RATING_CLIENT	 INT,
REGION_RATING_CLIENT_W_CITY	 INT,
HOUR_APPR_PROCESS_START	 INT,
REG_REGION_NOT_LIVE_REGION	 INT,
REG_REGION_NOT_WORK_REGION	 INT,
LIVE_REGION_NOT_WORK_REGION	 INT,
REG_CITY_NOT_LIVE_CITY	 INT,
REG_CITY_NOT_WORK_CITY	 INT,
LIVE_CITY_NOT_WORK_CITY	 INT,
OBS_30_CNT_SOCIAL_CIRCLE	 INT,
DEF_30_CNT_SOCIAL_CIRCLE	 INT,
OBS_60_CNT_SOCIAL_CIRCLE	 INT,
DEF_60_CNT_SOCIAL_CIRCLE	 INT,
DAYS_LAST_PHONE_CHANGE	 INT,
FLAG_DOCUMENT_2	 INT,
FLAG_DOCUMENT_3	 INT,
FLAG_DOCUMENT_4	 INT,
FLAG_DOCUMENT_5	 INT,
FLAG_DOCUMENT_6	 INT,
FLAG_DOCUMENT_7	 INT,
FLAG_DOCUMENT_8	 INT,
FLAG_DOCUMENT_9	 INT,
FLAG_DOCUMENT_10	 INT,
FLAG_DOCUMENT_11	 INT,
FLAG_DOCUMENT_12	 INT,
FLAG_DOCUMENT_13	 INT,
FLAG_DOCUMENT_14	 INT,
FLAG_DOCUMENT_15	 INT,
FLAG_DOCUMENT_16	 INT,
FLAG_DOCUMENT_17	 INT,
FLAG_DOCUMENT_18	 INT,
FLAG_DOCUMENT_19	 INT,
FLAG_DOCUMENT_20	 INT,
FLAG_DOCUMENT_21	 INT,
AMT_REQ_CREDIT_BUREAU_HOUR	 INT,
AMT_REQ_CREDIT_BUREAU_DAY	 INT,
AMT_REQ_CREDIT_BUREAU_WEEK	 INT,
AMT_REQ_CREDIT_BUREAU_MON	 INT,
AMT_REQ_CREDIT_BUREAU_QRT	 INT,
AMT_REQ_CREDIT_BUREAU_YEAR	 INT,

NAME_CONTRACT_TYPE	 STRING,
CODE_GENDER	 STRING,
FLAG_OWN_CAR	 STRING,
FLAG_OWN_REALTY	 STRING,
NAME_TYPE_SUITE	 STRING,
NAME_INCOME_TYPE	 STRING,
NAME_EDUCATION_TYPE	 STRING,
NAME_FAMILY_STATUS	 STRING,
NAME_HOUSING_TYPE	 STRING,
OCCUPATION_TYPE	 STRING,
WEEKDAY_APPR_PROCESS_START	 STRING,
ORGANIZATION_TYPE	 STRING,
FONDKAPREMONT_MODE	 STRING,
HOUSETYPE_MODE	 STRING,
WALLSMATERIAL_MODE	 STRING,
EMERGENCYSTATE_MODE	 STRING,

AMT_INCOME_TOTAL	 FLOAT,
AMT_CREDIT	 FLOAT,
AMT_ANNUITY	 FLOAT,
AMT_GOODS_PRICE	 FLOAT,
REGION_POPULATION_RELATIVE	 FLOAT,
EXT_SOURCE_1	 FLOAT,
EXT_SOURCE_2	 FLOAT,
EXT_SOURCE_3	 FLOAT,
APARTMENTS_AVG	 FLOAT,
BASEMENTAREA_AVG	 FLOAT,
YEARS_BEGINEXPLUATATION_AVG	 FLOAT,
YEARS_BUILD_AVG	 FLOAT,
COMMONAREA_AVG	 FLOAT,
ELEVATORS_AVG	 FLOAT,
ENTRANCES_AVG	 FLOAT,
FLOORSMAX_AVG	 FLOAT,
FLOORSMIN_AVG	 FLOAT,
LANDAREA_AVG	 FLOAT,
LIVINGAPARTMENTS_AVG	 FLOAT,
LIVINGAREA_AVG	 FLOAT,
NONLIVINGAPARTMENTS_AVG	 FLOAT,
NONLIVINGAREA_AVG	 FLOAT,
APARTMENTS_MODE	 FLOAT,
BASEMENTAREA_MODE	 FLOAT,
YEARS_BEGINEXPLUATATION_MODE	 FLOAT,
YEARS_BUILD_MODE	 FLOAT,
COMMONAREA_MODE	 FLOAT,
ELEVATORS_MODE	 FLOAT,
ENTRANCES_MODE	 FLOAT,
FLOORSMAX_MODE	 FLOAT,
FLOORSMIN_MODE	 FLOAT,
LANDAREA_MODE	 FLOAT,
LIVINGAPARTMENTS_MODE	 FLOAT,
LIVINGAREA_MODE	 FLOAT,
NONLIVINGAPARTMENTS_MODE	 FLOAT,
NONLIVINGAREA_MODE	 FLOAT,
APARTMENTS_MEDI	 FLOAT,
BASEMENTAREA_MEDI	 FLOAT,
YEARS_BEGINEXPLUATATION_MEDI	 FLOAT,
YEARS_BUILD_MEDI	 FLOAT,
COMMONAREA_MEDI	 FLOAT,
ELEVATORS_MEDI	 FLOAT,
ENTRANCES_MEDI	 FLOAT,
FLOORSMAX_MEDI	 FLOAT,
FLOORSMIN_MEDI	 FLOAT,
LANDAREA_MEDI	 FLOAT,
LIVINGAPARTMENTS_MEDI	 FLOAT,
LIVINGAREA_MEDI	 FLOAT,
NONLIVINGAPARTMENTS_MEDI	 FLOAT,
NONLIVINGAREA_MEDI	 FLOAT,
TOTALAREA_MODE	 FLOAT
)

-- COMMAND ----------

create table application_test_student (
SK_ID_CURR	 INT,
CNT_CHILDREN	 INT,
DAYS_BIRTH	 INT,
DAYS_EMPLOYED	 INT,
DAYS_REGISTRATION	 INT,
DAYS_ID_PUBLISH	 INT,
OWN_CAR_AGE	 INT,
FLAG_MOBIL	 INT,
FLAG_EMP_PHONE	 INT,
FLAG_WORK_PHONE	 INT,
FLAG_CONT_MOBILE	 INT,
FLAG_PHONE	 INT,
FLAG_EMAIL	 INT,
CNT_FAM_MEMBERS	 INT,
REGION_RATING_CLIENT	 INT,
REGION_RATING_CLIENT_W_CITY	 INT,
HOUR_APPR_PROCESS_START	 INT,
REG_REGION_NOT_LIVE_REGION	 INT,
REG_REGION_NOT_WORK_REGION	 INT,
LIVE_REGION_NOT_WORK_REGION	 INT,
REG_CITY_NOT_LIVE_CITY	 INT,
REG_CITY_NOT_WORK_CITY	 INT,
LIVE_CITY_NOT_WORK_CITY	 INT,
OBS_30_CNT_SOCIAL_CIRCLE	 INT,
DEF_30_CNT_SOCIAL_CIRCLE	 INT,
OBS_60_CNT_SOCIAL_CIRCLE	 INT,
DEF_60_CNT_SOCIAL_CIRCLE	 INT,
DAYS_LAST_PHONE_CHANGE	 INT,
FLAG_DOCUMENT_2	 INT,
FLAG_DOCUMENT_3	 INT,
FLAG_DOCUMENT_4	 INT,
FLAG_DOCUMENT_5	 INT,
FLAG_DOCUMENT_6	 INT,
FLAG_DOCUMENT_7	 INT,
FLAG_DOCUMENT_8	 INT,
FLAG_DOCUMENT_9	 INT,
FLAG_DOCUMENT_10	 INT,
FLAG_DOCUMENT_11	 INT,
FLAG_DOCUMENT_12	 INT,
FLAG_DOCUMENT_13	 INT,
FLAG_DOCUMENT_14	 INT,
FLAG_DOCUMENT_15	 INT,
FLAG_DOCUMENT_16	 INT,
FLAG_DOCUMENT_17	 INT,
FLAG_DOCUMENT_18	 INT,
FLAG_DOCUMENT_19	 INT,
FLAG_DOCUMENT_20	 INT,
FLAG_DOCUMENT_21	 INT,
AMT_REQ_CREDIT_BUREAU_HOUR	 INT,
AMT_REQ_CREDIT_BUREAU_DAY	 INT,
AMT_REQ_CREDIT_BUREAU_WEEK	 INT,
AMT_REQ_CREDIT_BUREAU_MON	 INT,
AMT_REQ_CREDIT_BUREAU_QRT	 INT,
AMT_REQ_CREDIT_BUREAU_YEAR	 INT,

NAME_CONTRACT_TYPE	 STRING,
CODE_GENDER	 STRING,
FLAG_OWN_CAR	 STRING,
FLAG_OWN_REALTY	 STRING,
NAME_TYPE_SUITE	 STRING,
NAME_INCOME_TYPE	 STRING,
NAME_EDUCATION_TYPE	 STRING,
NAME_FAMILY_STATUS	 STRING,
NAME_HOUSING_TYPE	 STRING,
OCCUPATION_TYPE	 STRING,
WEEKDAY_APPR_PROCESS_START	 STRING,
ORGANIZATION_TYPE	 STRING,
FONDKAPREMONT_MODE	 STRING,
HOUSETYPE_MODE	 STRING,
WALLSMATERIAL_MODE	 STRING,
EMERGENCYSTATE_MODE	 STRING,

AMT_INCOME_TOTAL	 FLOAT,
AMT_CREDIT	 FLOAT,
AMT_ANNUITY	 FLOAT,
AMT_GOODS_PRICE	 FLOAT,
REGION_POPULATION_RELATIVE	 FLOAT,
EXT_SOURCE_1	 FLOAT,
EXT_SOURCE_2	 FLOAT,
EXT_SOURCE_3	 FLOAT,
APARTMENTS_AVG	 FLOAT,
BASEMENTAREA_AVG	 FLOAT,
YEARS_BEGINEXPLUATATION_AVG	 FLOAT,
YEARS_BUILD_AVG	 FLOAT,
COMMONAREA_AVG	 FLOAT,
ELEVATORS_AVG	 FLOAT,
ENTRANCES_AVG	 FLOAT,
FLOORSMAX_AVG	 FLOAT,
FLOORSMIN_AVG	 FLOAT,
LANDAREA_AVG	 FLOAT,
LIVINGAPARTMENTS_AVG	 FLOAT,
LIVINGAREA_AVG	 FLOAT,
NONLIVINGAPARTMENTS_AVG	 FLOAT,
NONLIVINGAREA_AVG	 FLOAT,
APARTMENTS_MODE	 FLOAT,
BASEMENTAREA_MODE	 FLOAT,
YEARS_BEGINEXPLUATATION_MODE	 FLOAT,
YEARS_BUILD_MODE	 FLOAT,
COMMONAREA_MODE	 FLOAT,
ELEVATORS_MODE	 FLOAT,
ENTRANCES_MODE	 FLOAT,
FLOORSMAX_MODE	 FLOAT,
FLOORSMIN_MODE	 FLOAT,
LANDAREA_MODE	 FLOAT,
LIVINGAPARTMENTS_MODE	 FLOAT,
LIVINGAREA_MODE	 FLOAT,
NONLIVINGAPARTMENTS_MODE	 FLOAT,
NONLIVINGAREA_MODE	 FLOAT,
APARTMENTS_MEDI	 FLOAT,
BASEMENTAREA_MEDI	 FLOAT,
YEARS_BEGINEXPLUATATION_MEDI	 FLOAT,
YEARS_BUILD_MEDI	 FLOAT,
COMMONAREA_MEDI	 FLOAT,
ELEVATORS_MEDI	 FLOAT,
ENTRANCES_MEDI	 FLOAT,
FLOORSMAX_MEDI	 FLOAT,
FLOORSMIN_MEDI	 FLOAT,
LANDAREA_MEDI	 FLOAT,
LIVINGAPARTMENTS_MEDI	 FLOAT,
LIVINGAREA_MEDI	 FLOAT,
NONLIVINGAPARTMENTS_MEDI	 FLOAT,
NONLIVINGAREA_MEDI	 FLOAT,
TOTALAREA_MODE	 FLOAT
)

-- COMMAND ----------

insert into projeto_layer2.application_train 
select 
SK_ID_CURR	,
TARGET,
CNT_CHILDREN	,
-DAYS_BIRTH	,
-DAYS_EMPLOYED	,
-DAYS_REGISTRATION	,
-DAYS_ID_PUBLISH	,
cast(OWN_CAR_AGE	as integer),
FLAG_MOBIL	,
FLAG_EMP_PHONE	,
FLAG_WORK_PHONE	,
FLAG_CONT_MOBILE	,
FLAG_PHONE	,
FLAG_EMAIL	,
cast(CNT_FAM_MEMBERS	as integer),
REGION_RATING_CLIENT	,
REGION_RATING_CLIENT_W_CITY	,
HOUR_APPR_PROCESS_START	,
REG_REGION_NOT_LIVE_REGION	,
REG_REGION_NOT_WORK_REGION	,
LIVE_REGION_NOT_WORK_REGION	,
REG_CITY_NOT_LIVE_CITY	,
REG_CITY_NOT_WORK_CITY	,
LIVE_CITY_NOT_WORK_CITY	,
cast(OBS_30_CNT_SOCIAL_CIRCLE	as integer),
cast(DEF_30_CNT_SOCIAL_CIRCLE	as integer),
cast(OBS_60_CNT_SOCIAL_CIRCLE	as integer),
cast(DEF_60_CNT_SOCIAL_CIRCLE	as integer),
cast(-DAYS_LAST_PHONE_CHANGE	as integer),
FLAG_DOCUMENT_2	,
FLAG_DOCUMENT_3	,
FLAG_DOCUMENT_4	,
FLAG_DOCUMENT_5	,
FLAG_DOCUMENT_6	,
FLAG_DOCUMENT_7	,
FLAG_DOCUMENT_8	,
FLAG_DOCUMENT_9	,
FLAG_DOCUMENT_10	,
FLAG_DOCUMENT_11	,
FLAG_DOCUMENT_12	,
FLAG_DOCUMENT_13	,
FLAG_DOCUMENT_14	,
FLAG_DOCUMENT_15	,
FLAG_DOCUMENT_16	,
FLAG_DOCUMENT_17	,
FLAG_DOCUMENT_18	,
FLAG_DOCUMENT_19	,
FLAG_DOCUMENT_20	,
FLAG_DOCUMENT_21	,
cast(AMT_REQ_CREDIT_BUREAU_HOUR	as integer),
cast(AMT_REQ_CREDIT_BUREAU_DAY	as integer),
cast(AMT_REQ_CREDIT_BUREAU_WEEK	as integer),
cast(AMT_REQ_CREDIT_BUREAU_MON	as integer),
cast(AMT_REQ_CREDIT_BUREAU_QRT	as integer),
cast(AMT_REQ_CREDIT_BUREAU_YEAR	as integer),
NAME_CONTRACT_TYPE	,
CODE_GENDER	,
FLAG_OWN_CAR	,
FLAG_OWN_REALTY	,
NAME_TYPE_SUITE	,
NAME_INCOME_TYPE	,
NAME_EDUCATION_TYPE	,
NAME_FAMILY_STATUS	,
NAME_HOUSING_TYPE	,
OCCUPATION_TYPE	,
WEEKDAY_APPR_PROCESS_START	,
ORGANIZATION_TYPE	,
FONDKAPREMONT_MODE	,
HOUSETYPE_MODE	,
WALLSMATERIAL_MODE	,
EMERGENCYSTATE_MODE	,
AMT_INCOME_TOTAL	,
AMT_CREDIT	,
AMT_ANNUITY	,
AMT_GOODS_PRICE	,
REGION_POPULATION_RELATIVE	,
EXT_SOURCE_1	,
EXT_SOURCE_2	,
EXT_SOURCE_3	,
APARTMENTS_AVG	,
BASEMENTAREA_AVG	,
YEARS_BEGINEXPLUATATION_AVG	,
YEARS_BUILD_AVG	,
COMMONAREA_AVG	,
ELEVATORS_AVG	,
ENTRANCES_AVG	,
FLOORSMAX_AVG	,
FLOORSMIN_AVG	,
LANDAREA_AVG	,
LIVINGAPARTMENTS_AVG	,
LIVINGAREA_AVG	,
NONLIVINGAPARTMENTS_AVG	,
NONLIVINGAREA_AVG	,
APARTMENTS_MODE	,
BASEMENTAREA_MODE	,
YEARS_BEGINEXPLUATATION_MODE	,
YEARS_BUILD_MODE	,
COMMONAREA_MODE	,
ELEVATORS_MODE	,
ENTRANCES_MODE	,
FLOORSMAX_MODE	,
FLOORSMIN_MODE	,
LANDAREA_MODE	,
LIVINGAPARTMENTS_MODE	,
LIVINGAREA_MODE	,
NONLIVINGAPARTMENTS_MODE	,
NONLIVINGAREA_MODE	,
APARTMENTS_MEDI	,
BASEMENTAREA_MEDI	,
YEARS_BEGINEXPLUATATION_MEDI	,
YEARS_BUILD_MEDI	,
COMMONAREA_MEDI	,
ELEVATORS_MEDI	,
ENTRANCES_MEDI	,
FLOORSMAX_MEDI	,
FLOORSMIN_MEDI	,
LANDAREA_MEDI	,
LIVINGAPARTMENTS_MEDI	,
LIVINGAREA_MEDI	,
NONLIVINGAPARTMENTS_MEDI	,
NONLIVINGAREA_MEDI	,
TOTALAREA_MODE	

from projeto_layer1.application_train 

-- COMMAND ----------

insert into projeto_layer2.application_test_student 
select 
SK_ID_CURR	,
CNT_CHILDREN	,
-DAYS_BIRTH	,
-DAYS_EMPLOYED	,
-DAYS_REGISTRATION	,
-DAYS_ID_PUBLISH	,
cast(OWN_CAR_AGE	as integer),
FLAG_MOBIL	,
FLAG_EMP_PHONE	,
FLAG_WORK_PHONE	,
FLAG_CONT_MOBILE	,
FLAG_PHONE	,
FLAG_EMAIL	,
cast(CNT_FAM_MEMBERS	as integer),
REGION_RATING_CLIENT	,
REGION_RATING_CLIENT_W_CITY	,
HOUR_APPR_PROCESS_START	,
REG_REGION_NOT_LIVE_REGION	,
REG_REGION_NOT_WORK_REGION	,
LIVE_REGION_NOT_WORK_REGION	,
REG_CITY_NOT_LIVE_CITY	,
REG_CITY_NOT_WORK_CITY	,
LIVE_CITY_NOT_WORK_CITY	,
cast(OBS_30_CNT_SOCIAL_CIRCLE	as integer),
cast(DEF_30_CNT_SOCIAL_CIRCLE	as integer),
cast(OBS_60_CNT_SOCIAL_CIRCLE	as integer),
cast(DEF_60_CNT_SOCIAL_CIRCLE	as integer),
cast(-DAYS_LAST_PHONE_CHANGE	as integer),
FLAG_DOCUMENT_2	,
FLAG_DOCUMENT_3	,
FLAG_DOCUMENT_4	,
FLAG_DOCUMENT_5	,
FLAG_DOCUMENT_6	,
FLAG_DOCUMENT_7	,
FLAG_DOCUMENT_8	,
FLAG_DOCUMENT_9	,
FLAG_DOCUMENT_10	,
FLAG_DOCUMENT_11	,
FLAG_DOCUMENT_12	,
FLAG_DOCUMENT_13	,
FLAG_DOCUMENT_14	,
FLAG_DOCUMENT_15	,
FLAG_DOCUMENT_16	,
FLAG_DOCUMENT_17	,
FLAG_DOCUMENT_18	,
FLAG_DOCUMENT_19	,
FLAG_DOCUMENT_20	,
FLAG_DOCUMENT_21	,
cast(AMT_REQ_CREDIT_BUREAU_HOUR	as integer),
cast(AMT_REQ_CREDIT_BUREAU_DAY	as integer),
cast(AMT_REQ_CREDIT_BUREAU_WEEK	as integer),
cast(AMT_REQ_CREDIT_BUREAU_MON	as integer),
cast(AMT_REQ_CREDIT_BUREAU_QRT	as integer),
cast(AMT_REQ_CREDIT_BUREAU_YEAR	as integer),
NAME_CONTRACT_TYPE	,
CODE_GENDER	,
FLAG_OWN_CAR	,
FLAG_OWN_REALTY	,
NAME_TYPE_SUITE	,
NAME_INCOME_TYPE	,
NAME_EDUCATION_TYPE	,
NAME_FAMILY_STATUS	,
NAME_HOUSING_TYPE	,
OCCUPATION_TYPE	,
WEEKDAY_APPR_PROCESS_START	,
ORGANIZATION_TYPE	,
FONDKAPREMONT_MODE	,
HOUSETYPE_MODE	,
WALLSMATERIAL_MODE	,
EMERGENCYSTATE_MODE	,
AMT_INCOME_TOTAL	,
AMT_CREDIT	,
AMT_ANNUITY	,
AMT_GOODS_PRICE	,
REGION_POPULATION_RELATIVE	,
EXT_SOURCE_1	,
EXT_SOURCE_2	,
EXT_SOURCE_3	,
APARTMENTS_AVG	,
BASEMENTAREA_AVG	,
YEARS_BEGINEXPLUATATION_AVG	,
YEARS_BUILD_AVG	,
COMMONAREA_AVG	,
ELEVATORS_AVG	,
ENTRANCES_AVG	,
FLOORSMAX_AVG	,
FLOORSMIN_AVG	,
LANDAREA_AVG	,
LIVINGAPARTMENTS_AVG	,
LIVINGAREA_AVG	,
NONLIVINGAPARTMENTS_AVG	,
NONLIVINGAREA_AVG	,
APARTMENTS_MODE	,
BASEMENTAREA_MODE	,
YEARS_BEGINEXPLUATATION_MODE	,
YEARS_BUILD_MODE	,
COMMONAREA_MODE	,
ELEVATORS_MODE	,
ENTRANCES_MODE	,
FLOORSMAX_MODE	,
FLOORSMIN_MODE	,
LANDAREA_MODE	,
LIVINGAPARTMENTS_MODE	,
LIVINGAREA_MODE	,
NONLIVINGAPARTMENTS_MODE	,
NONLIVINGAREA_MODE	,
APARTMENTS_MEDI	,
BASEMENTAREA_MEDI	,
YEARS_BEGINEXPLUATATION_MEDI	,
YEARS_BUILD_MEDI	,
COMMONAREA_MEDI	,
ELEVATORS_MEDI	,
ENTRANCES_MEDI	,
FLOORSMAX_MEDI	,
FLOORSMIN_MEDI	,
LANDAREA_MEDI	,
LIVINGAPARTMENTS_MEDI	,
LIVINGAREA_MEDI	,
NONLIVINGAPARTMENTS_MEDI	,
NONLIVINGAREA_MEDI	,
TOTALAREA_MODE	

from projeto_layer1.application_test_student 

-- COMMAND ----------

-- MAGIC %python
-- MAGIC #df = sqlContext.table("projeto_layer2.application_test_student")
-- MAGIC df_test = sqlContext.sql("SELECT * FROM projeto_layer2.application_test_student")

-- COMMAND ----------

-- MAGIC %python
-- MAGIC #df = sqlContext.table("projeto_layer2.application_test_student")
-- MAGIC df_train = sqlContext.sql("SELECT * FROM projeto_layer2.application_train")

-- COMMAND ----------

-- MAGIC %python
-- MAGIC display(df_test)

-- COMMAND ----------

-- MAGIC %python
-- MAGIC display(df_train)

-- COMMAND ----------

-- MAGIC %python
-- MAGIC #df.to_csv('application_test_student_l2.csv')
-- MAGIC 
-- MAGIC #df.write.format("csv").mode("overwrite").save("/FileStore/tables/projeto_credito/application_test_student_l2.csv")
-- MAGIC 
-- MAGIC pd = df.toPandas()

-- COMMAND ----------

-- MAGIC %python
-- MAGIC pd.to_csv(path_or_buf='/FileStore/tables/projeto_credito/application_test_student_layer2.csv', mode='a+')

-- COMMAND ----------


